/* CSS from sda/ui.py modal_css */
.modal-background {
    position: fixed; top: 0; left: 0; width: 100%; height: 100%;
    background-color: rgba(0,0,0,0.6); display: none;
    justify-content: center; align-items: center; z-index: 1000;
}
.modal-content-wrapper {
    background-color: var(--panel-background-fill);
    color: var(--body-text-color); padding: 2rem;
    border-radius: 0.5rem; box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    height: auto;
}
.model-info-container {
    background: var(--background-fill-secondary);
    border-radius: 8px;
    padding: 15px;
    margin-bottom: 20px;
    border: 1px solid var(--border-color-primary);
}
.model-info-container h4, .hardware-info-container h4, .storage-info-container h4 {
    margin-top: 0;
    margin-bottom: 10px;
    color: var(--body-text-color);
}
.model-info-container p, .hardware-info-container p, .storage-info-container p {
    margin: 5px 0;
    font-size: 0.9em;
    color: var(--body-text-color-subdued);
}
.model-info-container i, .hardware-info-container i, .storage-info-container i, .usage-stats-container i {
    margin-right: 8px;
    color: var(--accent-color-primary); /* Or a specific color */
}
.usage-stats-container h4 i { /* Icon in the main title of usage stats */
     color: var(--body-text-color); /* Or keep accent if preferred */
}
.usage-stats-container .usage-section {
    margin-top: 10px;
    padding-top: 10px;
    border-top: 1px solid var(--border-color-primary-muted); /* Muted border for inner sections */
}
.usage-stats-container .usage-section:first-of-type {
    margin-top: 0;
    padding-top: 0;
    border-top: none;
}
.usage-stats-container h5 {
    margin-bottom: 8px;
    color: var(--body-text-color);
    font-size: 1em;
    font-weight: 600;
}
.usage-stats-container ul {
    list-style-type: none;
    padding-left: 10px;
    margin-top: 5px;
}
.usage-stats-container li {
    font-size: 0.85em;
    margin-bottom: 3px;
    color: var(--body-text-color-subdued);
}
.section-card {
    background: var(--background-fill-secondary);
    border-radius: 8px;
    padding: 15px;
    margin-bottom: 20px;
    border: 1px solid var(--border-color-primary);
    box-shadow: 0 2px 4px rgba(0,0,0,0.05);
}
.hardware-info-container h4 {
    margin-top: 0;
    margin-bottom: 10px;
    color: var(--body-text-color);
}
.hardware-info-container p {
    margin: 5px 0;
    font-size: 0.9em;
    color: var(--body-text-color-subdued);
}
.hardware-info-container ul {
    padding-left: 20px;
    margin: 5px 0;
}
.hardware-info-container li {
    font-size: 0.9em;
    color: var(--body-text-color-subdued);
}
.task-timing-info {
    margin-top: 10px;
    padding-top: 10px;
    border-top: 1px solid var(--border-color-primary);
}
.task-timing-info p {
    margin: 4px 0;
    font-size: 0.85em;
    color: var(--body-text-color-subdued);
}
/* Task Log Styles */
.task-log-entry {
    margin-bottom: 15px;
    padding: 12px;
}
.task-log-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 8px;
    padding-bottom: 8px;
    border-bottom: 1px solid var(--border-color-primary-muted);
}
.task-log-status-icon {
    margin-right: 10px;
    font-size: 1.1em;
}
.task-log-name {
    font-weight: 600;
    color: var(--body-text-color);
    flex-grow: 1;
}
.task-log-status {
    font-size: 0.9em;
    color: var(--body-text-color-subdued);
}
.task-log-body p {
    margin: 4px 0;
    font-size: 0.9em;
    color: var(--body-text-color-subdued);
}
.task-log-body strong {
    color: var(--body-text-color);
}
.task-log-error {
    margin-top: 8px;
    padding: 8px;
    background-color: rgba(220, 53, 69, 0.05); /* Light red background */
    border: 1px solid rgba(220, 53, 69, 0.2);
    border-radius: 4px;
}
.task-log-error pre {
    white-space: pre-wrap;
    word-break: break-all;
    font-size: 0.85em;
    max-height: 150px;
    overflow-y: auto;
}
.task-log-history-details {
    margin-top: 8px;
}
.task_log-history-details summary {
    cursor: pointer;
    font-size: 0.9em;
    color: var(--link-text-color);
    margin-bottom: 5px;
}
.task-log-raw-output {
    background-color: var(--code-background-fill);
    padding: 8px;
    border-radius: 4px;
    font-size: 0.8em;
    max-height: 200px;
    overflow-y: auto;
    border: 1px solid var(--border-color-primary);
}
#addRepoModal .modal-content-wrapper {
    max-width: 500px;
    width: 100%;
    height: auto; /* Allow height to fit content */
    max-height: 90vh; /* Prevent it from being too tall */
    display: flex; /* Arrange children (header, input, buttons) vertically */
    flex-direction: column;
    overflow-y: auto; /* Add scroll if content exceeds max-height */
}
#codeViewerModal .modal-content-wrapper {
    max-width: 80vw; width: 100%; max-height: 80vh; overflow-y: auto;
}
#statusModal .modal-content-wrapper {
    max-width: 70vw; max-height: 80vh; overflow-y: auto; width: 100%;
}
.model-info {
    font-size: 0.8rem; color: var(--body-text-color-subdued);
}

/* Prevent flicker on HTML component updates */
.progress-wrapper {
    transition: none !important;
    animation: none !important;
}

/* Progress Bar Styles */
.progress-container {
    width: 100%; margin: 10px 0; padding: 8px;
    background: var(--background-fill-secondary);
    border-radius: 8px; border: 1px solid var(--border-color-primary);
    transition: none !important;
}
.progress-header {
    display: flex; justify-content: space-between;
    align-items: center; margin-bottom: 8px;
}
.progress-task-name {
    font-weight: 600; color: var(--body-text-color);
}
.progress-percentage {
    font-weight: 500; color: var(--body-text-color-subdued);
}
.progress-bar-bg {
    width: 100%; height: 20px; background-color: var(--background-fill-primary);
    border-radius: 10px; overflow: hidden; position: relative;
}
.progress-bar-fill {
    height: 100%; background: linear-gradient(90deg, #007bff, #0056b3);
    transition: width 0.6s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
}
.progress-bar-fill::after {
    content: ''; position: absolute; top: 0; left: 0; right: 0; bottom: 0;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
    animation: shimmer 2s infinite;
}
@keyframes shimmer {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
}
.progress-message {
    margin-top: 8px; font-size: 0.85rem;
    color: var(--body-text-color-subdued); font-style: italic;
}

/* Status Modal Styles */
.status-container {
    font-family: var(--font-sans); line-height: 1.5;
}
.main-task-section-card h3 {
    margin-top: 0; /* Already part of .section-card h4, but good to be explicit for h3 */
    margin-bottom: 15px;
    color: var(--body-text-color);
    font-size: 1.2em; /* Slightly larger for main task title */
}
.main-task-section-card h3 i {
    margin-right: 8px;
    color: var(--accent-color-primary);
}
.task-status-card { /* This is nested inside main-task-section-card */
    background: var(--background-fill-primary); /* Keep its own slightly different bg if needed */
    border-radius: 6px; /* Inner card might have slightly smaller radius */
    padding: 15px;
    margin: 0; /* No margin as it's inside a section-card padding */
    border: 1px solid var(--border-color-secondary); /* Subtle inner border */
}
.subtask-card { /* Subtasks can also be section-cards or have similar styling */
    background: var(--background-fill-primary);
    border-radius: 8px; padding: 15px; margin: 15px 0; /* Added more margin for separation */
    border: 1px solid var(--border-color-primary);
    box-shadow: 0 1px 3px rgba(0,0,0,0.03);
}
.status-header, .subtask-header {
    display: flex; align-items: center; gap: 10px; margin-bottom: 10px;
}
.status-label {
    font-weight: 600;
}
.status-value {
    padding: 2px 8px; border-radius: 4px;
    background: var(--background-fill-secondary);
}
.status-icon {
    font-size: 1.2em;
}
.subtask-name {
    font-weight: 500; flex-grow: 1;
}
.subtask-status {
    color: var(--body-text-color-subdued);
}
.task-details, .subtask-details {
    margin-top: 10px; padding: 10px;
    background: var(--background-fill-secondary);
    border-radius: 4px; font-size: 0.9em;
}
.task-details ul, .subtask-details ul {
    margin: 5px 0; padding-left: 20px;
}
.error-section {
    margin-top: 15px; padding: 15px;
    background: rgba(220, 53, 69, 0.1);
    border: 1px solid rgba(220, 53, 69, 0.3);
    border-radius: 8px;
}
.error-message {
    background: var(--background-fill-primary);
    padding: 10px; border-radius: 4px;
    font-size: 0.85em; overflow-x: auto;
}

/* Hide scrollbars on specific components */
#component-30,
#component-29 {
    overflow: hidden !important; /* Use !important to override inline style */
}

/* Added Modal Header and Close Button Styles */
.modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-bottom: 0.75rem; /* Corresponds to mb-3 in Tailwind */
    margin-bottom: 1rem;     /* Spacing after header */
    border-bottom: 1px solid var(--border-color-primary, #e5e7eb); /* Use var or fallback */
}

/* Ensure title within modal header uses body text color by default */
.modal-header .modal-title, .modal-header .modal-title p { /* Target p if Gradio wraps Markdown output */
    color: var(--body-text-color);
    margin-bottom: 0 !important; /* Override Gradio's default Markdown bottom margin if any */
}

.modal-close-x-wrapper {
    margin-left: auto; /* Push the wrapper (Gradio HTML component div) to the right */
    display: flex;
    align-items: center; /* Vertically center the button */
    justify-content: flex-end; /* Align the button to the right end of the wrapper */
}

.modal-close-x {
    background: transparent;
    border: none;
    font-size: 1.25rem; /* text-xl for the icon, adjust as needed */
    color: var(--body-text-color-subdued, #6b7280); /* Use var or fallback */
    cursor: pointer;
    padding: 0.25rem; /* Add some padding for easier clicking */
    line-height: 1; /* Ensure icon is centered */
}

.modal-close-x:hover {
    color: var(--body-text-color, #1f2937); /* Use var or fallback */
}

html.dark .modal-header {
    border-bottom-color: var(--border-color-primary-dark, #374151);
}

html.dark .modal-close-x {
    color: var(--body-text-color-subdued-dark, #9ca3af);
}

html.dark .modal-close-x:hover {
    color: var(--body-text-color-dark, #f3f4f6);
}

/* Styles for HTML-based button with icon */
.html-button-wrapper {
}

.button-with-icon-content {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.375rem;
    white-space: nowrap;
    cursor: pointer;
}

.button-with-icon-content i {
}

/* Stat Cards Styles */
.stat-cards-container {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    margin-bottom: 1rem;
}

.stat-card {
    flex: 1 1 180px;
    background-color: var(--background-fill-secondary, #f9fafb);
    padding: 1.25rem;
    border-radius: 0.5rem;
    border: 1px solid var(--border-color-primary, #e5e7eb);
    box-shadow: var(--shadow-drop);
    text-align: center;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    min-height: 100px;
}

html.dark .stat-card {
    background-color: var(--background-fill-secondary-dark, #374151);
    border-color: var(--border-color-primary-dark, #4b5563);
}

.stat-value {
    font-size: 2.25rem;
    font-weight: 700;
    color: var(--body-text-color, #111827);
    line-height: 1.1;
    margin-bottom: 0.25rem;
}

html.dark .stat-value {
    color: var(--body-text-color-dark, #f3f4f6);
}

.stat-label {
    font-size: 0.875rem;
    font-weight: 500;
    color: var(--body-text-color-subdued, #6b7280);
    text-transform: uppercase;
    letter-spacing: 0.05em;
}

html.dark .stat-label {
    color: var(--body-text-color-subdued-dark, #9ca3af);
}

.stat-icon {
    font-size: 1.75rem;
    margin-bottom: 0.75rem;
    color: var(--accent-color-primary, #007bff);
}

html.dark .stat-icon {
    color: var(--accent-color-primary-dark, #3b82f6);
}

/* Custom styles for status bar row */
.sda-status-bar-row {
    align-items: stretch !important;
    gap: var(--spacing-lg, 1rem) !important;
}

.sda-status-bar-row > div[class*="gr-form"] {
    border: none !important;
    padding: 0 !important;
    margin: 0 !important;
    background: transparent !important;
    align-self: center;
}

.sda-status-bar-row textarea {
    min-height: var(--size-10, 40px) !important;
    height: var(--size-10, 40px) !important;
    /* Vertically center text in single-line textarea: */
    line-height: calc(var(--size-10, 40px) - 2 * var(--spacing-xxs, 4px)) !important; /* text height */
    padding-top: var(--spacing-xxs, 4px) !important; /* Adjust to center */
    padding-bottom: var(--spacing-xxs, 4px) !important; /* Adjust to center */
    box-sizing: border-box !important;
    resize: none !important;
    overflow: hidden !important;
    white-space: nowrap !important;
}

.sda-status-bar-row .html-button-wrapper {
    display: flex;
    align-items: center;
    height: var(--size-10, 40px);
}
.sda-status-bar-row .html-button-wrapper > div {
    height: 100%;
    display: flex;
    align-items: center;
}

.sda-status-bar-row .html-button-wrapper button.gr-button-lg {
    height: var(--size-10, 40px) !important;
    min-height: var(--size-10, 40px) !important;
    padding-top: 0 !important;
    padding-bottom: 0 !important;
    display: inline-flex;
    align-items: center;
}

/* Style for FileExplorer height */
/* Remove fixed height for #sda_file_explorer wrapper, let Gradio component height and flex control it */
#sda_file_explorer {
    padding: 0 !important;
    border: none !important;
    background: transparent !important;
    box-shadow: none !important;
    display: flex; /* Ensure it's a flex container */
    flex-direction: column; /* Stack children vertically */
    flex-grow: 1; /* Allow it to grow within its parent TabItem/Column */
    min-height: 0; /* Essential for flex children to shrink properly */
    height: 100%; /* Attempt to take full height of parent */
}

#sda_file_explorer > div:first-child {
    flex-grow: 1; /* Allow Gradio's inner div to grow */
    display: flex;
    flex-direction: column;
    overflow: hidden; /* Prevent this div from scrolling; FileExplorer component itself will scroll */
    border: none !important;
    padding: 0 !important;
    min-height: 0; /* Essential for flex children */
}
/* The actual FileExplorer component's height should be set via its `height` parameter in ui.py */
/* We want the component to manage its own scrolling. */


/* === Appended styles for iframe and FileExplorer containers === */

/* Common reset for Gradio component wrappers we want to control */
#ast_iframe_container_wrapper,
#control_panel_iframe_container_wrapper {
    padding: 0 !important;
    border: none !important;
    background: transparent !important; /* Make wrapper transparent */
    box-shadow: none !important;
    display: flex; /* Establishes a flex formatting context. */
    flex-direction: column; /* Stack children vertically. */
    overflow: hidden; /* Prevent this wrapper from showing scrollbars. */
    flex-grow: 1; /* Allow this wrapper to take up available space in its flex parent. */
    /* min-height: 300px; /* REMOVED: Let's rely on parent's height or content. */
    height: 100%; /* Make it try to fill parent, works if parent has defined height or is flex item. */
}

/* Make the direct child (often Gradio's own content div) also flexible */
/* This targets the div that Gradio wraps around the gr.HTML output (our iframe) */
#ast_iframe_container_wrapper > div:first-child,
#control_panel_iframe_container_wrapper > div:first-child {
    flex-grow: 1; /* This child should grow to fill the #control_panel_iframe_container_wrapper. */
    display: flex; /* It's also a flex container for the iframe. */
    flex-direction: column; /* Stack its children (the iframe) vertically. */
    overflow: hidden; /* Prevent this div itself from scrolling. */
    border: none !important;
    padding: 0 !important;
    /* min-height: 0; /* Already good for flex children. */
    height: 100%; /* Ensure it fills its parent. */
}

/* Ensure the iframe itself takes full height and width of its allocated space */
#ast_iframe_container_wrapper iframe,
#control_panel_iframe_container_wrapper iframe {
    flex-grow: 1; /* The iframe should grow to fill its parent div. */
    width: 100%;
    height: 100%; /* This should make the iframe fill the `> div:first-child`. */
    border: none;
}


/* Ensure Gradio Tabs and TabItems allow their content to take full height.
   The goal is to make the area where `embedding_html_viewer` and `file_explorer`
   are placed capable of having 100% height children.
*/
/* This targets the content area of a selected tab. */
/* Gradio structure: .gradio-tabs -> .tabs -> .tabitem (selected) -> div (content) */
.gradio-tabs > .tabs > div[role="tabpanel"][class*="selected"] > div {
    display: flex;
    flex-direction: column;
    height: 100%; /* Make tab content area also full height */
    overflow: hidden; /* Its children will manage scrolling */
    flex-grow: 1; /* Allow tab content to grow if tab itself is in a flex container */
}

/* Ensure rows/columns within tabs also allow children to expand */
/* Targets direct children rows/columns of the tab content area */
.gradio-tabs > .tabs > div[role="tabpanel"][class*="selected"] > div > .gradio-row,
.gradio-tabs > .tabs > div[role="tabpanel"][class*="selected"] > div > .gradio-column {
    flex-grow: 1;
    display: flex;
    min-height: 0; /* Allow shrinking if necessary */
    /* flex-direction will be row for .gradio-row and column for .gradio-column by default from Gradio */
}

/* If FileExplorer or AST viewer are in a column that is in a row */
/* (e.g. Tab content -> Row -> Column (this one) -> Component) */
.gradio-row > .gradio-column {
    height: 100%; /* Make columns fill the row height if row has height */
    display: flex;
    flex-direction: column; /* Prepare for children to grow vertically */
    flex-grow: 1; /* Allow column to grow within the row */
    min-height: 0; /* Allow shrinking */
}

/* Specifically for the Document Comprehension tab's layout */
/* Tab(id=2) -> Row -> Column (File Explorer), Column (Content Tabs) */
/* We need the Row itself to fill height, and its Column children to also manage height */
div[id="2"].gradio-tabitem { /* Targeting the TabItem for Document Comprehension by its id */
    height: 100%;
    display: flex;
    flex-direction: column;
}
div[id="2"].gradio-tabitem > div { /* The div child of TabItem that holds content */
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    min-height: 0;
}
/* The Row directly inside Document Comprehension tab content */
div[id="2"].gradio-tabitem > div > .gradio-row {
    flex-grow: 1;
    display: flex;
    min-height: 0; /* Important! */
}
/* The Columns inside that Row */
div[id="2"].gradio-tabitem > div > .gradio-row > .gradio-column {
    height: 100%; /* Make these columns take full height of the row */
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    min-height: 0; /* Important! */
}

/* The content_tabs (gr.Tabs) within the right-hand column of Document Comprehension tab */
#content_tabs {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    min-height: 0;
}
#content_tabs > .tabs { /* The actual tabs container */
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    min-height: 0;
}
/* The tab content area within content_tabs */
#content_tabs > .tabs > div[role="tabpanel"][class*="selected"] > div {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    min-height: 0;
}

/* === End of appended styles === */
